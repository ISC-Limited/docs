{
  "openapi": "3.0.1",
  "info": {
    "title": "SchoolMaker API V1",
    "description": "API for managing your SchoolMaker school",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://schoolmaker.co/api/v1",
      "description": "Production API"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/members": {
      "get": {
        "summary": "List Members",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of members with pagination",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "members": {
                      "type": "array",
                      "description": "25 members per page.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": { "type": "string" },
                          "email": { "type": "string" },
                          "first_name": { "type": "string" },
                          "last_name": { "type": "string" },
                          "last_seen_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "updated_at": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "total_count": { "type": "integer" },
                        "total_pages": { "type": "integer" },
                        "current_page": { "type": "integer" }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/members/{id}": {
      "get": {
        "summary": "Get Member Details",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Member details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique identifier of the member"
                    },
                    "email": {
                      "type": "string",
                      "description": "Email address of the member"
                    },
                    "first_name": {
                      "type": "string",
                      "description": "First name of the member"
                    },
                    "last_name": {
                      "type": "string",
                      "description": "Last name of the member"
                    },
                    "last_seen_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Timestamp when the member was last seen"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Timestamp when the member was created"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Timestamp when the member was last updated"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/members/{id}/accesses": {
      "get": {
        "summary": "Get Member Accesses",
        "description": "Retrieves all member offer accesses.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Member accesses",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "accesses": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": { "type": "string" },
                          "offer_id": { "type": "string" },
                          "price": {
                            "type": "object",
                            "properties": {
                              "id": { "type": "string", "nullable": true },
                              "amount": { "type": "number", "nullable": true },
                              "currency": {
                                "type": "string",
                                "nullable": true
                              },
                              "price_type": {
                                "type": "string",
                                "nullable": true
                              },
                              "recurring_interval": {
                                "type": "string",
                                "nullable": true
                              },
                              "recurring_interval_count": {
                                "type": "integer",
                                "nullable": true
                              }
                            }
                          },
                          "is_active": { "type": "boolean" },
                          "access_created_at": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admins": {
      "get": {
        "summary": "List Admins & Moderators",
        "responses": {
          "200": {
            "description": "List of admins & moderators of your school",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "users": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": { "type": "string" },
                          "email": { "type": "string" },
                          "first_name": { "type": "string" },
                          "last_name": { "type": "string" },
                          "role": { "type": "string" },
                          "is_active": { "type": "boolean" },
                          "is_banned": { "type": "boolean" },
                          "time_zone": { "type": "string" },
                          "last_seen_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "updated_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "is_school_owner": { "type": "boolean" }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admins/{id}": {
      "get": {
        "summary": "Get Admin/Moderator Details",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Admin/moderator details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "string" },
                    "email": { "type": "string" },
                    "first_name": { "type": "string" },
                    "last_name": { "type": "string" },
                    "role": { "type": "string" },
                    "is_active": { "type": "boolean" },
                    "is_banned": { "type": "boolean" },
                    "time_zone": { "type": "string" },
                    "last_seen_at": { "type": "string", "format": "date-time" },
                    "created_at": { "type": "string", "format": "date-time" },
                    "updated_at": { "type": "string", "format": "date-time" },
                    "is_school_owner": { "type": "boolean" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/products": {
      "get": {
        "summary": "List Programs",
        "description": "Retrieves all programs of your school.",
        "parameters": [
          {
            "name": "member_id",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "member_email",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of programs",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "products": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": { "type": "string" },
                          "name": { "type": "string" },
                          "description": { "type": "string" },
                          "is_published": { "type": "boolean" },
                          "position": { "type": "integer" },
                          "created_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "updated_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "progression": {
                            "type": "object",
                            "description": "The progression-related elements will only be displayed if you specify a member_id or member_email",
                            "properties": {
                              "total_steps": { "type": "integer" },
                              "completed_steps": { "type": "integer" },
                              "progression_rate": { "type": "number" },
                              "time_spent": { "type": "string" }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/products/{id}": {
      "get": {
        "summary": "Get Program Details",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "member_id",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "member_email",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "string" },
                    "name": { "type": "string" },
                    "description": { "type": "string" },
                    "is_published": { "type": "boolean" },
                    "position": { "type": "integer" },
                    "created_at": { "type": "string", "format": "date-time" },
                    "updated_at": { "type": "string", "format": "date-time" },
                    "progression": {
                      "type": "object",
                      "description": "The progression-related elements will only be displayed if you specify a member_id or member_email",
                      "properties": {
                        "total_steps": { "type": "integer" },
                        "completed_steps": { "type": "integer" },
                        "progression_rate": { "type": "number" },
                        "time_spent": { "type": "string" }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/offers": {
      "get": {
        "summary": "List Offers",
        "description": "Retrieves all offers of your school.",
        "responses": {
          "200": {
            "description": "List of offers",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "offers": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": { "type": "string" },
                          "name": { "type": "string" },
                          "description": { "type": "string" },
                          "prices": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": { "type": "string" },
                                "amount": { "type": "number" },
                                "currency": { "type": "string" }
                              }
                            }
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/offers/{id}": {
      "get": {
        "summary": "Get Offer Details",
        "description": "Retrieves details from a specific offer.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get Offer Details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "string" },
                    "name": { "type": "string" },
                    "description": { "type": "string" },
                    "prices": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": { "type": "string" },
                          "amount": { "type": "number" },
                          "currency": { "type": "string" }
                        }
                      }
                    },
                    "created_at": { "type": "string", "format": "date-time" }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Set Offer Details",
        "description": "Updates offer's name, description, and publish status.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "is_published": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated offer details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "string" },
                    "name": { "type": "string" },
                    "description": { "type": "string" },
                    "prices": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": { "type": "string" },
                          "amount": { "type": "number" },
                          "currency": { "type": "string" }
                        }
                      }
                    },
                    "created_at": { "type": "string", "format": "date-time" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/offers/{id}/accesses": {
      "post": {
        "summary": "Set Offer Access for a Member",
        "description": "Change member access status settings.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "access": {
                    "type": "object",
                    "properties": {
                      "member_email": {
                        "type": "string"
                      },
                      "status": {
                        "type": "boolean"
                      },
                      "first_name": {
                        "type": "string"
                      },
                      "last_name": {
                        "type": "string"
                      }
                    },
                    "required": ["member_email", "status"]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Access created or updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "string", "description": "Access ID" },
                    "member_id": {
                      "type": "string",
                      "description": "Member ID"
                    },
                    "email": {
                      "type": "string",
                      "description": "Member email"
                    },
                    "is_active": {
                      "type": "boolean",
                      "description": "Access active status"
                    },
                    "offer_name": {
                      "type": "string",
                      "description": "Offer name"
                    },
                    "offer_id": { "type": "string", "description": "Offer ID" },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Creation timestamp"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/offers/{id}/accesses/set_drip_boost": {
      "post": {
        "summary": "Set a Drip Boost",
        "description": "Updates the drip boost value for a specific member in a specific offer.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "access": {
                    "type": "object",
                    "properties": {
                      "member_email": {
                        "type": "string"
                      },
                      "drip": {
                        "type": "integer"
                      }
                    },
                    "required": ["member_email", "drip"]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Drip boost added",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "access_id": {
                      "type": "string",
                      "description": "Access ID"
                    },
                    "offer_name": {
                      "type": "string",
                      "description": "Offer name"
                    },
                    "offer_id": { "type": "string", "description": "Offer ID" },
                    "member_id": {
                      "type": "string",
                      "description": "Member ID"
                    },
                    "email": {
                      "type": "string",
                      "description": "Member email"
                    },
                    "drip": {
                      "type": "integer",
                      "description": "Drip boost value"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/coachings/types": {
      "get": {
        "summary": "List Coaching Types",
        "responses": {
          "200": {
            "description": "List of coaching types",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": { "type": "string" },
                      "name": { "type": "string" },
                      "unit": { "type": "string" },
                      "is_published": { "type": "boolean" },
                      "calendar_embed_code": { "type": "string" },
                      "created_at": { "type": "string", "format": "date-time" },
                      "updated_at": { "type": "string", "format": "date-time" },
                      "description": { "type": "string" },
                      "coaches": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": { "type": "string" },
                            "email": { "type": "string" },
                            "name": { "type": "string" }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/coachings/appointments": {
      "post": {
        "summary": "Create a Coaching Appointment",
        "description": "Creates an appointment with selected members and coaches.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type_id": {
                    "type": "string"
                  },
                  "date": {
                    "type": "string"
                  },
                  "duration_hours": {
                    "type": "integer"
                  },
                  "duration_minutes": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "is_published": {
                    "type": "boolean"
                  },
                  "member_emails": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "user_emails": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "type_id",
                  "date",
                  "duration_hours",
                  "duration_minutes",
                  "name",
                  "description",
                  "is_published",
                  "member_emails",
                  "user_emails"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Appointment created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "appointment_id": {
                      "type": "string",
                      "description": "The ID of the created appointment"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/conversations/groups": {
      "post": {
        "summary": "Create a Conversation Group",
        "description": "Creates a conversation and send a message to recipients.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "The title is optional, by default it will just be the names of the participants"
                  },
                  "message": {
                    "type": "string"
                  },
                  "sender_id": {
                    "type": "string",
                    "description": "The ID of the admin or moderator sender. Default is the school owner.",
                    "default": "school_owner_id"
                  },
                  "member_participants": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "email",
                      "description": "Array of member email addresses"
                    },
                    "description": "Array of member email addresses"
                  },
                  "user_participants": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "email",
                      "description": "Array of user email addresses"
                    },
                    "description": "Array of user email addresses"
                  }
                },
                "required": ["message", "member_participants"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Group created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "group_id": {
                      "type": "string",
                      "description": "The ID of the created conversation group"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/webhooks": {
      "get": {
        "summary": "List Webhooks",
        "responses": {
          "200": {
            "description": "List of webhooks",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": { "type": "string" },
                      "webhook_url": { "type": "string" },
                      "event_type": { "type": "string" },
                      "provider": { "type": "string" },
                      "extra_parameters": { "type": "object" },
                      "created_at": { "type": "string", "format": "date-time" },
                      "updated_at": { "type": "string", "format": "date-time" }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a Webhook",
        "description": "Create a webhook for events: `element_completed`, `member_joining_offer`, `new_payment`, `member_inactivity`, `gamification_level_passed` ",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "webhook_url": {
                    "format": "uri",
                    "type": "string",
                    "description": "The URL where webhook payloads will be sent via POST requests. This should be a publicly accessible HTTPS endpoint that can receive and process the webhook events."
                  },
                  "event_type": {
                    "type": "string",
                    "enum": [
                      "element_completed",
                      "member_joining_offer",
                      "new_payment",
                      "member_inactivity",
                      "gamification_level_passed"
                    ]
                  },
                  "provider": {
                    "type": "string"
                  },
                  "extra_parameters": {
                    "type": "object",
                    "properties": {
                      "offerFilter": {
                        "type": "array",
                        "description": "List of offer IDs to filter `member_joining_offer` events",
                        "items": {
                          "type": "string"
                        }
                      },
                      "activeLevels": {
                        "type": "array",
                        "description": "List of level numbers to filter `gamification_level_passed` events",
                        "items": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                },
                "required": ["webhook_url", "event_type"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Webhook created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "string" },
                    "webhook_url": { "type": "string" },
                    "event_type": { "type": "string" },
                    "provider": { "type": "string" },
                    "extra_parameters": { "type": "object" },
                    "created_at": { "type": "string", "format": "date-time" },
                    "updated_at": { "type": "string", "format": "date-time" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/webhooks/{id}": {
      "delete": {
        "summary": "Delete a Webhook",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Webhook deleted"
          }
        }
      },
      "get": {
        "summary": "Get webhook details",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Webhook details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "string" },
                    "webhook_url": { "type": "string" },
                    "event_type": { "type": "string" },
                    "provider": { "type": "string" },
                    "extra_parameters": { "type": "object" },
                    "created_at": { "type": "string", "format": "date-time" },
                    "updated_at": { "type": "string", "format": "date-time" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/gamifications/leaderboards": {
      "get": {
        "summary": "Get Leaderboard Ranking",
        "description": "Retrieves leaderboard ranking and filters by time range.",
        "parameters": [
          {
            "name": "time_range",
            "in": "query",
            "description": "Time range for the leaderboard: all time, last 7 days, or last 30 days",
            "schema": {
              "type": "string",
              "enum": ["all", "7", "30"],
              "default": "all"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Leaderboard Data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "leaderboard": {
                      "type": "object",
                      "properties": {
                        "total_members": {
                          "type": "integer",
                          "description": "Total number of members in the leaderboard"
                        },
                        "members": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "rank": { "type": "integer" },
                              "id": { "type": "string" },
                              "first_name": { "type": "string" },
                              "last_name": { "type": "string" },
                              "status": { "type": "string" },
                              "email": { "type": "string" },
                              "name": { "type": "string" },
                              "total_points": { "type": "integer" }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
 
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}
